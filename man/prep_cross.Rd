% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/prep_cross.R
\name{prep_cross}
\alias{prep_cross}
\title{Create a cross object}
\usage{
prep_cross(map, founders, finals, selfing.gen)
}
\arguments{
\item{map}{The genetic map, formatted as a \code{list} of chromosomes, where
each chromosome is a named vector of marker positions (in cM) and the names
are the marker names.}

\item{founders}{A list of founder genotypes, where each element in the list
is a \code{matrix} of genotypes on a single chromosome. Genotypes should be
coded as \code{z {0, 1, 2, NA}} where \code{z} is the number of reference alleles.
Column names should be marker names. This is the observed genotype data.}

\item{finals}{A list of progeny genotypes. The encoding and formatting should
be identical to the argument \code{founders}.}

\item{selfing.gen}{The number of selfing generations that the \code{finals}
have undergone. If the generation of the finals is \emph{F_t}, then the
argument \code{selfing.gen} would be \emph{t} - 1.}
}
\value{
An object of class \code{cross} with the normal elements \code{geno} and
\code{pheno}. The \code{geno} element is a list of chromosomes, each with
the elements:
\describe{
\item{data}{The recoded progeny genotypes}
\item{map}{The genetic map on that chromosome}
\item{founders}{The original founder genotypes}
\item{finals}{The original final genotypes}
\item{founders_unamb}{The unambiguous founder genotypes}
\item{finals_unamb}{The unambiguous final genotypes}
}
}
\description{
Takes raw founder and final genotypes and assembles a \code{cross}
object for downstream analysis. The genotypic data is first filtered
for unambiguous genotypes (see \code{Details}), then the genotypes are
recoded based on the unambiguous genotypes. Finally a \code{cross} object
is assembled and returned.
}
\details{
To force genotype data from a bi-parental family into a \code{cross} object
in \code{\link[qtl]{read.cross}}, the genotypes must be recoded into parental
states. Say two inbred parents have the observed gentypes \code{parent1 = 0} and
\code{parent2 = 2}, the parental states would be recoded as
\code{parent1 = 1} and \code{parent2 = 3}. Parent 1 is also given a parental
state of \code{1} and parent 2 is always given a parental state of \code{3}.
Among the progeny, any genotype call that is identical to the that of parent 1
would received a recoded genotype of \code{1}, and any gentype cal that is
identical to that of parent 2 would receive a recoded genotype of \code{3}.
Heterozygous genotype calls are recoded as \code{2}.

Of course, in observed genotype data, the parental states are inherently
unknown (otherwise imputation would be easy). To determine parental states at
a marker, the marker must be unambiguous. That is, the parental states must
be easily inferred. To do this, we must only look at markers for which the
parents are both observed (i.e. no NA) and polymorphic between (i.e.
\code{0} and \code{2}). Any ambiguous markers are set to missing. This is ok,
because the imputation step is easily able to impute these genotypes.
}

